{"version":3,"sources":["components/Tooltip/images/close.svg","components/Tooltip/images/info.svg","components/Tooltip/Tooltip.module.scss","components/SalaryForm/SalaryForm.module.scss","components/Input/components/SalaryInfo/SalaryInfo.module.scss","components/Input/components/Radio/Radio.tsx","components/Input/components/Switcher/Switcher.tsx","components/Input/components/Text/Text.tsx","components/Input/Input.tsx","components/Tooltip/Tooltip.tsx","components/Input/components/SalaryInfo/SalaryInfo.tsx","components/SalaryForm/SalaryForm.tsx","components/SalaryForm/initialValues.ts","App.tsx","store/index.ts","index.tsx","components/Input/components/Switcher/Switcher.module.scss","components/Input/components/Text/Text.module.scss"],"names":["module","exports","Radio","input","id","meta","value","label","CustomInput","type","checked","Switcher","label1","label2","className","styles","container","htmlFor","classnames","active","Text","Input","props","renderInput","TooltipContent","scheduleUpdate","text","useEffect","intervalId","setInterval","clearInterval","Tooltip","useState","isOpen","toggleOpen","btn","onClick","e","preventDefault","src","close","info","alt","toggle","prev","placement","target","trigger","SalaryInfo","withoutNDFL","salary","salaryCount","undefined","salaryValue","Math","round","NDFLValue","totalValue","row","bold","SalaryFormWithoutValues","reduxForm","form","handleSubmit","salaryType","mounthlyCount","onSubmit","header","salaryTypeContainer","Field","name","component","inputContainer","selector","formValueSelector","SalaryForm","connect","state","initialValues","dailyCount","hourlyCount","App","rootReducer","combineReducers","formReducer","store","createStore","composeWithDevTools","render","document","getElementById"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCC3CD,EAAOC,QAAU,CAAC,IAAM,uB,+ECAxBD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,oBAAsB,wCAAwC,eAAiB,mCAAmC,IAAM,0B,mBCAxND,EAAOC,QAAU,CAAC,UAAY,8BAA8B,IAAM,wBAAwB,KAAO,2B,+GCWpFC,EAAyB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAAaC,GAAuB,EAA7BC,KAA6B,EAAvBD,IAAIE,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC/D,OAAO,kBAACC,EAAA,EAAD,eAAaC,KAAK,QAAQL,GAAIA,EAAIM,QAASP,EAAMG,QAAUA,EAAOC,MAAOA,GAAWJ,EAApF,CAA2FG,MAAOA,M,iCCE9FK,EAA4B,SAAC,GAAyC,IAAvCR,EAAsC,EAAtCA,MAAaS,GAAyB,EAA/BP,KAA+B,EAAzBO,QAAQC,EAAiB,EAAjBA,OAAQT,EAAS,EAATA,GACvE,OACE,yBAAKU,UAAWC,IAAOC,WACrB,2BAAOC,QAASb,EAAIU,UAAWI,IAAW,CAACH,IAAOR,OAAQJ,EAAMG,OAASS,IAAOI,UAC7EP,GAEH,kBAACJ,EAAA,EAAD,eAAaC,KAAK,SAASL,GAAIA,GAAQD,IACvC,2BAAOc,QAASb,EAAIU,UAAWI,IAAW,CAACH,IAAOR,MAAOJ,EAAMG,OAASS,IAAOI,UAC5EN,K,0BCVIO,EAAwB,SAAC,GAAgC,IAA9BjB,EAA6B,EAA7BA,MAAaC,GAAgB,EAAtBC,KAAsB,EAAhBD,IAAIG,EAAY,EAAZA,MACvD,OACE,yBAAKO,UAAWC,IAAOC,WACrB,kBAAC,IAAD,eAAOP,KAAK,UAAaN,EAAzB,CAAgCW,UAAWC,IAAOZ,SAClD,2BAAOW,UAAWC,IAAOR,MAAOU,QAASb,GACtCG,KCCIc,EAAyB,SAACC,GAYrC,OAXoB,WAClB,OAAQA,EAAMb,MACZ,IAAK,QACH,OAAO,kBAAC,EAAUa,GACpB,IAAK,WACH,OAAO,kBAAC,EAAaA,GACvB,QACE,OAAO,kBAAC,EAASA,IAIhBC,I,wECdHC,EAA4C,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,KAQnE,OAPAC,qBAAU,WACR,IAAMC,EAAaC,aAAY,WAC7BJ,MACC,KACH,OAAO,kBAAMK,cAAcF,OAGtB,oCAAGF,IAGCK,EAA8B,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAAW,EAC1BM,oBAAS,GADiB,mBAChDC,EADgD,KACxCC,EADwC,KASvD,OACE,6BACE,4BAAQpB,UAAWC,IAAOoB,IAAKC,QANhB,SAACC,GAClBA,EAAEC,kBAKoDlC,GAAG,yBACrD,yBAAKmC,IAAKN,EAASO,IAAQC,IAAMC,IAAI,iGAGvC,kBAAC,IAAD,CACET,OAAQA,EACRU,OAdS,kBAAMT,GAAW,SAACU,GAAD,OAAWA,MAerCC,UAAU,eACVC,OAAO,wBACPC,QAAQ,UAEP,gBAAGtB,EAAH,EAAGA,eAAH,OAAwB,kBAAC,EAAD,CAAgBC,KAAMA,EAAMD,eAAgBA,S,kCCzChEuB,EAA+B,SAAC,GAA6B,IAC1C1C,EADe2C,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAEpDC,OADyEC,KAAjD9C,EACW4C,GADkD,GAAK5C,EAG1F+C,EAAcJ,EAAcE,EAAcG,KAAKC,MAAoB,IAAdJ,GACrDK,EAAYP,EAAcK,KAAKC,MAAOJ,EAAc,GAAM,IAAMG,KAAKC,MAAoB,IAAdJ,GAC3EM,EAAaJ,EAAcG,EAEjC,OACE,yBAAK1C,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAO2C,KACrB,0BAAM5C,UAAWC,IAAO4C,MAAON,EAA/B,WACA,+MAEF,yBAAKvC,UAAWC,IAAO2C,KACrB,0BAAM5C,UAAWC,IAAO4C,MAAOH,EAA/B,WACA,kHAEF,yBAAK1C,UAAWC,IAAO2C,KACrB,0BAAM5C,UAAWC,IAAO4C,MAAOF,EAA/B,WACA,oJC6EFG,EAA0BC,YAAU,CACxCC,KAAM,UADwBD,EAnFc,SAAC,GAA8D,IAA5DE,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,cAAehB,EAAkB,EAAlBA,YACxF,OACE,0BAAMiB,SAAUH,GACd,wBAAIjD,UAAWC,IAAOoD,QAAtB,kCACA,yBAAKrD,UAAWC,IAAOqD,qBACrB,yBAAKtD,UAAWC,IAAO2C,KACrB,kBAACW,EAAA,EAAD,CACEC,KAAK,aACLC,UAAWlD,EACXC,MAAO,CAAEb,KAAM,QAASL,GAAI,WAAYE,MAAO,WAAYC,MAAO,iFAGtE,yBAAKO,UAAWC,IAAO2C,KACrB,kBAACW,EAAA,EAAD,CACEC,KAAK,aACLC,UAAWlD,EACXC,MAAO,CAAEb,KAAM,QAASL,GAAI,OAAQE,MAAO,OAAQC,MAAO,8BAE5D,kBAAC,EAAD,CAASmB,KAAK,4VAEhB,yBAAKZ,UAAWC,IAAO2C,KACrB,kBAACW,EAAA,EAAD,CACEC,KAAK,aACLC,UAAWlD,EACXC,MAAO,CAAEb,KAAM,QAASL,GAAI,QAASE,MAAO,QAASC,MAAO,2EAGhE,yBAAKO,UAAWC,IAAO2C,KACrB,kBAACW,EAAA,EAAD,CACEC,KAAK,aACLC,UAAWlD,EACXC,MAAO,CAAEb,KAAM,QAASL,GAAI,SAAUE,MAAO,SAAUC,MAAO,sEAIpE,yBAAKO,UAAWC,IAAOyD,gBACrB,kBAACH,EAAA,EAAD,CACEC,KAAK,cACLC,UAAWlD,EACXC,MAAO,CACLb,KAAM,WACNL,GAAI,cACJQ,OAAQ,6EACRC,OAAQ,iDAGI,aAAfmD,GACC,kBAACK,EAAA,EAAD,CACEC,KAAK,gBACLC,UAAWlD,EACXZ,KAAK,SACLa,MAAO,CACLlB,GAAI,gBACJG,MAAO,YAIG,UAAfyD,GACC,kBAACK,EAAA,EAAD,CACEC,KAAK,aACLC,UAAWlD,EACXC,MAAO,CACLlB,GAAI,aACJG,MAAO,4CAIG,WAAfyD,GACC,kBAACK,EAAA,EAAD,CACEC,KAAK,cACLC,UAAWlD,EACXC,MAAO,CACLlB,GAAI,cACJG,MAAO,uCAKC,aAAfyD,GAA6B,kBAAC,EAAD,CAAYd,OAAQe,EAAehB,YAAaA,QAS9EwB,EAAWC,YAAkB,UAEtBC,EAAaC,aAAQ,SAACC,GACjC,MAAO,CACLb,WAAYS,EAASI,EAAO,cAC5BZ,cAAeQ,EAASI,EAAO,iBAC/B5B,YAAawB,EAASI,EAAO,kBAJPD,CAMvBhB,GC9GUkB,EAA+B,CAC1Cd,WAAY,WACZf,aAAa,EACbgB,cAAe,IACfc,WAAY,IACZC,YAAa,KCFAC,MARf,WACE,OACE,yBAAKnE,UAAU,sBACb,kBAAC6D,EAAD,CAAYG,cAAeA,M,iCCF3BI,EAAcC,0BAAgB,CAClCrB,KAAMsB,MAGKC,EAAQC,sBAAYJ,EAAaK,iCCD9CC,iBACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,U,mBCV1B1F,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,OAAS,2B,mBCAnGD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,MAAQ,uB","file":"static/js/main.da0fb1ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.c8e88071.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.fb39fb75.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Tooltip_btn__10hDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SalaryForm_container__1p2cD\",\"header\":\"SalaryForm_header__Epi9-\",\"salaryTypeContainer\":\"SalaryForm_salaryTypeContainer__3nCeL\",\"inputContainer\":\"SalaryForm_inputContainer__3ujj8\",\"row\":\"SalaryForm_row__AbKIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SalaryInfo_container__3wuzB\",\"row\":\"SalaryInfo_row__1W9UR\",\"bold\":\"SalaryInfo_bold__JRVxY\"};","import React from 'react'\r\nimport { CustomInput } from 'reactstrap'\r\nimport { WrappedFieldProps } from 'redux-form'\r\n\r\nexport interface IRadioProps {\r\n  id: string\r\n  value: string\r\n  label: string\r\n}\r\n\r\ntype Props = WrappedFieldProps & IRadioProps\r\n\r\nexport const Radio: React.FC<Props> = ({ input, meta, id, value, label }) => {\r\n  return <CustomInput type='radio' id={id} checked={input.value === value} label={label} {...input} value={value} />\r\n}\r\n","import React from 'react'\r\nimport { CustomInput } from 'reactstrap'\r\nimport { WrappedFieldProps } from 'redux-form'\r\nimport classnames from 'classnames'\r\n\r\nimport styles from './Switcher.module.scss'\r\n\r\nexport interface ISwitcherProps {\r\n  id: string\r\n  label1: string\r\n  label2: string\r\n}\r\n\r\ntype Props = WrappedFieldProps & ISwitcherProps\r\n\r\nexport const Switcher: React.FC<Props> = ({ input, meta, label1, label2, id }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <label htmlFor={id} className={classnames([styles.label, !input.value && styles.active])}>\r\n        {label1}\r\n      </label>\r\n      <CustomInput type='switch' id={id} {...input} />\r\n      <label htmlFor={id} className={classnames([styles.label, input.value && styles.active])}>\r\n        {label2}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Input } from 'reactstrap'\r\nimport { WrappedFieldProps } from 'redux-form'\r\n\r\nimport styles from './Text.module.scss'\r\n\r\nexport interface ITextProps {\r\n  id: string\r\n  label: string\r\n}\r\n\r\ntype Props = WrappedFieldProps & ITextProps\r\n\r\nexport const Text: React.FC<Props> = ({ input, meta, id, label }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Input type='number' {...input} className={styles.input} />\r\n      <label className={styles.label} htmlFor={id}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { WrappedFieldProps } from 'redux-form'\r\n\r\nimport { Radio } from './components/Radio'\r\nimport { Switcher } from './components/Switcher'\r\nimport { Text } from './components/Text'\r\n\r\nimport { IRadioProps } from './components/Radio/Radio'\r\nimport { ISwitcherProps } from './components/Switcher/Switcher'\r\nimport { ITextProps } from './components/Text/Text'\r\n\r\ntype RadioInput = { type: 'radio' } & IRadioProps\r\ntype SwitcherInput = { type: 'switcher' } & ISwitcherProps\r\ntype TextInput = { type: 'text' } & ITextProps\r\n\r\ntype InputProps = RadioInput | SwitcherInput | TextInput\r\n\r\ntype Props = WrappedFieldProps & InputProps\r\n\r\nexport const Input: React.FC<Props> = (props) => {\r\n  const renderInput = () => {\r\n    switch (props.type) {\r\n      case 'radio':\r\n        return <Radio {...props} />\r\n      case 'switcher':\r\n        return <Switcher {...props} />\r\n      default:\r\n        return <Text {...props} />\r\n    }\r\n  }\r\n\r\n  return renderInput()\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Tooltip as ReactstrapTooltip } from 'reactstrap'\r\n\r\nimport close from './images/close.svg'\r\nimport info from './images/info.svg'\r\n\r\nimport styles from './Tooltip.module.scss'\r\n\r\ninterface ITooltipContent {\r\n  scheduleUpdate: () => void\r\n  text: string\r\n}\r\n\r\ninterface ITooltip {\r\n  text: string\r\n}\r\n\r\nconst TooltipContent: React.FC<ITooltipContent> = ({ scheduleUpdate, text }) => {\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      scheduleUpdate()\r\n    }, 2000)\r\n    return () => clearInterval(intervalId)\r\n  })\r\n\r\n  return <>{text}</>\r\n}\r\n\r\nexport const Tooltip: React.FC<ITooltip> = ({ text }) => {\r\n  const [isOpen, toggleOpen] = useState(false)\r\n\r\n  const toggle = () => toggleOpen((prev) => !prev)\r\n\r\n  const onClickBtn = (e: React.SyntheticEvent<HTMLButtonElement>) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button className={styles.btn} onClick={onClickBtn} id='ScheduleUpdateTooltip'>\r\n        <img src={isOpen ? close : info} alt='Узнать подробнее' />\r\n      </button>\r\n\r\n      <ReactstrapTooltip\r\n        isOpen={isOpen}\r\n        toggle={toggle}\r\n        placement='bottom-start'\r\n        target='ScheduleUpdateTooltip'\r\n        trigger='click'\r\n      >\r\n        {({ scheduleUpdate }) => <TooltipContent text={text} scheduleUpdate={scheduleUpdate} />}\r\n      </ReactstrapTooltip>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport styles from './SalaryInfo.module.scss'\r\n\r\ninterface IProps {\r\n  withoutNDFL: boolean\r\n  salary: string\r\n}\r\n\r\nexport const SalaryInfo: React.FC<IProps> = ({ withoutNDFL, salary }) => {\r\n  const transformSalaryValue = (value: string | undefined): number => (value === undefined ? 0 : +value)\r\n  const salaryCount = transformSalaryValue(salary)\r\n\r\n  const salaryValue = withoutNDFL ? salaryCount : Math.round(salaryCount * 0.87)\r\n  const NDFLValue = withoutNDFL ? Math.round((salaryCount / 87) * 13) : Math.round(salaryCount * 0.13)\r\n  const totalValue = salaryValue + NDFLValue\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.row}>\r\n        <span className={styles.bold}>{salaryValue} ₽</span>\r\n        <span>сотрудник будет получать на руки</span>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <span className={styles.bold}>{NDFLValue} ₽</span>\r\n        <span>НДФЛ, 13% от оклада</span>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <span className={styles.bold}>{totalValue} ₽</span>\r\n        <span>за сотрудника в месяц</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Field, reduxForm, InjectedFormProps, formValueSelector } from 'redux-form'\r\nimport { connect } from 'react-redux'\r\nimport { Input } from '../Input'\r\nimport { Tooltip } from '../Tooltip'\r\n\r\nimport styles from './SalaryForm.module.scss'\r\nimport { SalaryInfo } from '../Input/components/SalaryInfo/SalaryInfo'\r\n\r\ninterface IFormData {\r\n  salaryType: string\r\n  withoutNDFL: boolean\r\n  mounthlyCount: string\r\n  dailyCount: string\r\n  hourlyCount: string\r\n}\r\n\r\ninterface IProps {\r\n  [prop: string]: any\r\n}\r\n\r\ntype AllProps = IProps & InjectedFormProps<IFormData, IProps>\r\n\r\nconst SalaryFormComponent: React.FC<IProps> = ({ handleSubmit, salaryType, mounthlyCount, withoutNDFL }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3 className={styles.header}>Сумма</h3>\r\n      <div className={styles.salaryTypeContainer}>\r\n        <div className={styles.row}>\r\n          <Field\r\n            name='salaryType'\r\n            component={Input}\r\n            props={{ type: 'radio', id: 'mounthly', value: 'mounthly', label: 'Оклад за месяц' }}\r\n          />\r\n        </div>\r\n        <div className={styles.row}>\r\n          <Field\r\n            name='salaryType'\r\n            component={Input}\r\n            props={{ type: 'radio', id: 'mrot', value: 'mrot', label: 'МРОТ' }}\r\n          />\r\n          <Tooltip text='МРОТ - минимальный размер оплаты труда. Разный для разных регионов.' />\r\n        </div>\r\n        <div className={styles.row}>\r\n          <Field\r\n            name='salaryType'\r\n            component={Input}\r\n            props={{ type: 'radio', id: 'daily', value: 'daily', label: 'Оклад за день' }}\r\n          />\r\n        </div>\r\n        <div className={styles.row}>\r\n          <Field\r\n            name='salaryType'\r\n            component={Input}\r\n            props={{ type: 'radio', id: 'hourly', value: 'hourly', label: 'Оклад за час' }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.inputContainer}>\r\n        <Field\r\n          name='withoutNDFL'\r\n          component={Input}\r\n          props={{\r\n            type: 'switcher',\r\n            id: 'withoutNDFL',\r\n            label1: 'Указать с НДФЛ',\r\n            label2: 'Без НДФЛ',\r\n          }}\r\n        />\r\n        {salaryType === 'mounthly' && (\r\n          <Field\r\n            name='mounthlyCount'\r\n            component={Input}\r\n            type='number'\r\n            props={{\r\n              id: 'mounthlyCount',\r\n              label: '₽',\r\n            }}\r\n          />\r\n        )}\r\n        {salaryType === 'daily' && (\r\n          <Field\r\n            name='dailyCount'\r\n            component={Input}\r\n            props={{\r\n              id: 'dailyCount',\r\n              label: '₽ в день',\r\n            }}\r\n          />\r\n        )}\r\n        {salaryType === 'hourly' && (\r\n          <Field\r\n            name='hourlyCount'\r\n            component={Input}\r\n            props={{\r\n              id: 'hourlyCount',\r\n              label: '₽ в час',\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      {salaryType === 'mounthly' && <SalaryInfo salary={mounthlyCount} withoutNDFL={withoutNDFL} />}\r\n    </form>\r\n  )\r\n}\r\n\r\nconst SalaryFormWithoutValues = reduxForm({\r\n  form: 'salary',\r\n})(SalaryFormComponent)\r\n\r\nconst selector = formValueSelector('salary')\r\n\r\nexport const SalaryForm = connect((state) => {\r\n  return {\r\n    salaryType: selector(state, 'salaryType'),\r\n    mounthlyCount: selector(state, 'mounthlyCount'),\r\n    withoutNDFL: selector(state, 'withoutNDFL'),\r\n  }\r\n})(SalaryFormWithoutValues)\r\n","export interface InitialValues {\r\n  salaryType: string,\r\n  withoutNDFL: boolean,\r\n  mounthlyCount: string,\r\n  dailyCount: string,\r\n  hourlyCount: string,\r\n}\r\n\r\nexport const initialValues: InitialValues = {\r\n  salaryType: 'mounthly',\r\n  withoutNDFL: false,\r\n  mounthlyCount: '0',\r\n  dailyCount: '0',\r\n  hourlyCount: '0',\r\n}\r\n","import React from 'react'\nimport { SalaryForm, initialValues } from './components/SalaryForm'\n\nfunction App() {\n  return (\n    <div className='App container py-3'>\n      <SalaryForm initialValues={initialValues} />\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst rootReducer = combineReducers({\r\n  form: formReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import './styles/index.scss'\nimport App from './App'\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Switcher_container__2ItOb\",\"label\":\"Switcher_label__3Ddn8\",\"active\":\"Switcher_active__3WtPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Text_container__oA0K9\",\"input\":\"Text_input__h3YuY\",\"label\":\"Text_label__2fEvi\"};"],"sourceRoot":""}